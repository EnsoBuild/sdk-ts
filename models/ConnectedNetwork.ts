/* tslint:disable */
/* eslint-disable */
/**
 * 
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConnectedNetwork
 */
export interface ConnectedNetwork {
    /**
     * 
     * @type {number}
     * @memberof ConnectedNetwork
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ConnectedNetwork
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConnectedNetwork
     */
    isConnected: boolean;
}

/**
 * Check if a given object implements the ConnectedNetwork interface.
 */
export function instanceOfConnectedNetwork(value: object): value is ConnectedNetwork {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('isConnected' in value) || value['isConnected'] === undefined) return false;
    return true;
}

export function ConnectedNetworkFromJSON(json: any): ConnectedNetwork {
    return ConnectedNetworkFromJSONTyped(json, false);
}

export function ConnectedNetworkFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectedNetwork {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'isConnected': json['isConnected'],
    };
}

export function ConnectedNetworkToJSON(json: any): ConnectedNetwork {
    return ConnectedNetworkToJSONTyped(json, false);
}

export function ConnectedNetworkToJSONTyped(value?: ConnectedNetwork | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'isConnected': value['isConnected'],
    };
}

