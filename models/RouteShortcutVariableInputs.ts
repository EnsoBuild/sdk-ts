/* tslint:disable */
/* eslint-disable */
/**
 * 
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RouteShortcutVariableInputs
 */
export interface RouteShortcutVariableInputs {
    /**
     * Chain ID of the network to execute the transaction on
     * @type {number}
     * @memberof RouteShortcutVariableInputs
     */
    chainId?: number;
    /**
     * Ethereum address of the wallet to send the transaction from
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    fromAddress: string;
    /**
     * Routing strategy to use
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    routingStrategy?: RouteShortcutVariableInputsRoutingStrategyEnum | null;
    /**
     * Flag that indicates if gained tokenOut should be sent to EOA
     * @type {boolean}
     * @memberof RouteShortcutVariableInputs
     * @deprecated
     */
    toEoa?: boolean | null;
    /**
     * Ethereum address of the receiver of the tokenOut
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    receiver?: string;
    /**
     * Ethereum address of the spender of the tokenIn
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    spender?: string;
    /**
     * Amount of tokenIn to swap in wei
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    amountIn: Array<string>;
    /**
     * Minimum amount out in wei. If specified, slippage should not be specified
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    minAmountOut?: Array<string>;
    /**
     * Slippage in basis points (1/10000). If specified, minAmountOut should not be specified
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    slippage?: string;
    /**
     * Fee in basis points (1/10000) for each amountIn value. Must be in range 0-100. If specified, this percentage of each amountIn value will be sent to feeReceiver
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    fee?: Array<string>;
    /**
     * The Ethereum address that will receive the collected fee. Required if fee is provided
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    feeReceiver?: string;
    /**
     * A list of swap aggregators to be ignored from consideration
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    ignoreAggregators?: Array<string> | null;
    /**
     * A list of standards to be ignored from consideration
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    ignoreStandards?: Array<string> | null;
    /**
     * Referral code that will be included in an on-chain event.
     * @type {string}
     * @memberof RouteShortcutVariableInputs
     */
    referralCode?: string;
    /**
     * Ethereum address of the token to swap from. For ETH, use 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    tokenIn: Array<string>;
    /**
     * Ethereum address of the token to swap to. For ETH, use 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
     * @type {Array<string>}
     * @memberof RouteShortcutVariableInputs
     */
    tokenOut: Array<string>;
    /**
     * Chain ID of the network to bridge to and receive tokenOut
     * @type {number}
     * @memberof RouteShortcutVariableInputs
     */
    destinationChainId?: number;
    /**
     * 
     * @type {object}
     * @memberof RouteShortcutVariableInputs
     */
    variableEstimates: object;
}


/**
 * @export
 */
export const RouteShortcutVariableInputsRoutingStrategyEnum = {
    Ensowallet: 'ensowallet',
    Router: 'router',
    Delegate: 'delegate',
    RouterLegacy: 'router-legacy',
    DelegateLegacy: 'delegate-legacy'
} as const;
export type RouteShortcutVariableInputsRoutingStrategyEnum = typeof RouteShortcutVariableInputsRoutingStrategyEnum[keyof typeof RouteShortcutVariableInputsRoutingStrategyEnum];


/**
 * Check if a given object implements the RouteShortcutVariableInputs interface.
 */
export function instanceOfRouteShortcutVariableInputs(value: object): value is RouteShortcutVariableInputs {
    if (!('fromAddress' in value) || value['fromAddress'] === undefined) return false;
    if (!('amountIn' in value) || value['amountIn'] === undefined) return false;
    if (!('tokenIn' in value) || value['tokenIn'] === undefined) return false;
    if (!('tokenOut' in value) || value['tokenOut'] === undefined) return false;
    if (!('variableEstimates' in value) || value['variableEstimates'] === undefined) return false;
    return true;
}

export function RouteShortcutVariableInputsFromJSON(json: any): RouteShortcutVariableInputs {
    return RouteShortcutVariableInputsFromJSONTyped(json, false);
}

export function RouteShortcutVariableInputsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteShortcutVariableInputs {
    if (json == null) {
        return json;
    }
    return {
        
        'chainId': json['chainId'] == null ? undefined : json['chainId'],
        'fromAddress': json['fromAddress'],
        'routingStrategy': json['routingStrategy'] == null ? undefined : json['routingStrategy'],
        'toEoa': json['toEoa'] == null ? undefined : json['toEoa'],
        'receiver': json['receiver'] == null ? undefined : json['receiver'],
        'spender': json['spender'] == null ? undefined : json['spender'],
        'amountIn': json['amountIn'],
        'minAmountOut': json['minAmountOut'] == null ? undefined : json['minAmountOut'],
        'slippage': json['slippage'] == null ? undefined : json['slippage'],
        'fee': json['fee'] == null ? undefined : json['fee'],
        'feeReceiver': json['feeReceiver'] == null ? undefined : json['feeReceiver'],
        'ignoreAggregators': json['ignoreAggregators'] == null ? undefined : json['ignoreAggregators'],
        'ignoreStandards': json['ignoreStandards'] == null ? undefined : json['ignoreStandards'],
        'referralCode': json['referralCode'] == null ? undefined : json['referralCode'],
        'tokenIn': json['tokenIn'],
        'tokenOut': json['tokenOut'],
        'destinationChainId': json['destinationChainId'] == null ? undefined : json['destinationChainId'],
        'variableEstimates': json['variableEstimates'],
    };
}

export function RouteShortcutVariableInputsToJSON(json: any): RouteShortcutVariableInputs {
    return RouteShortcutVariableInputsToJSONTyped(json, false);
}

export function RouteShortcutVariableInputsToJSONTyped(value?: RouteShortcutVariableInputs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chainId': value['chainId'],
        'fromAddress': value['fromAddress'],
        'routingStrategy': value['routingStrategy'],
        'toEoa': value['toEoa'],
        'receiver': value['receiver'],
        'spender': value['spender'],
        'amountIn': value['amountIn'],
        'minAmountOut': value['minAmountOut'],
        'slippage': value['slippage'],
        'fee': value['fee'],
        'feeReceiver': value['feeReceiver'],
        'ignoreAggregators': value['ignoreAggregators'],
        'ignoreStandards': value['ignoreStandards'],
        'referralCode': value['referralCode'],
        'tokenIn': value['tokenIn'],
        'tokenOut': value['tokenOut'],
        'destinationChainId': value['destinationChainId'],
        'variableEstimates': value['variableEstimates'],
    };
}

