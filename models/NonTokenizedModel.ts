/* tslint:disable */
/* eslint-disable */
/**
 * 
 * #### Enso API - Find detailed documentation on [docs.enso.finance](https://docs.enso.finance). - To use the API, **you must include your API Key in the Authorization header** (Bearer format). - For testing, Swagger pre-authorizes you using the key: `1e02632d-6feb-4a75-a157-documentation` (1rps). - Get your own API Key at [enso.finance/developers](https://enso.finance/developers).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TokenModel } from './TokenModel';
import {
    TokenModelFromJSON,
    TokenModelFromJSONTyped,
    TokenModelToJSON,
    TokenModelToJSONTyped,
} from './TokenModel';

/**
 * 
 * @export
 * @interface NonTokenizedModel
 */
export interface NonTokenizedModel {
    /**
     * Chain ID of the network of the nontokenized position
     * @type {number}
     * @memberof NonTokenizedModel
     */
    chainId: number;
    /**
     * The specific standard integration or version of the nontokenized position
     * @type {string}
     * @memberof NonTokenizedModel
     */
    protocol: string;
    /**
     * Ethereum address of the nontokenized position
     * @type {string}
     * @memberof NonTokenizedModel
     */
    address: string;
    /**
     * Ethereum address of the nontokenized position
     * @type {string}
     * @memberof NonTokenizedModel
     */
    primaryAddress: string;
    /**
     * Underlying tokens of nontokenized position
     * @type {Array<TokenModel>}
     * @memberof NonTokenizedModel
     */
    underlyingTokens: Array<TokenModel> | null;
}

/**
 * Check if a given object implements the NonTokenizedModel interface.
 */
export function instanceOfNonTokenizedModel(value: object): value is NonTokenizedModel {
    if (!('chainId' in value) || value['chainId'] === undefined) return false;
    if (!('protocol' in value) || value['protocol'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('primaryAddress' in value) || value['primaryAddress'] === undefined) return false;
    if (!('underlyingTokens' in value) || value['underlyingTokens'] === undefined) return false;
    return true;
}

export function NonTokenizedModelFromJSON(json: any): NonTokenizedModel {
    return NonTokenizedModelFromJSONTyped(json, false);
}

export function NonTokenizedModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NonTokenizedModel {
    if (json == null) {
        return json;
    }
    return {
        
        'chainId': json['chainId'],
        'protocol': json['protocol'],
        'address': json['address'],
        'primaryAddress': json['primaryAddress'],
        'underlyingTokens': (json['underlyingTokens'] == null ? null : (json['underlyingTokens'] as Array<any>).map(TokenModelFromJSON)),
    };
}

export function NonTokenizedModelToJSON(json: any): NonTokenizedModel {
    return NonTokenizedModelToJSONTyped(json, false);
}

export function NonTokenizedModelToJSONTyped(value?: NonTokenizedModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chainId': value['chainId'],
        'protocol': value['protocol'],
        'address': value['address'],
        'primaryAddress': value['primaryAddress'],
        'underlyingTokens': (value['underlyingTokens'] == null ? null : (value['underlyingTokens'] as Array<any>).map(TokenModelToJSON)),
    };
}

